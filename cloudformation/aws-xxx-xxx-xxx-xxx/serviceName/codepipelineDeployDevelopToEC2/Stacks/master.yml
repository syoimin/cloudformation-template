# sample-pipeline.yml

AWSTemplateFormatVersion: 2010-09-09
Description: CodePipeline For deploying EC2 role

Parameters:
  GitHubOwner:
    Type: String
    Description: GitHub Owner Name
  GitHubToken:
    Type: String
    Description: GitHub Token
  Repository:
    Type: String
    Description: GitHub Repository
  Branch:
    Type: String
    Description: GitHub Branch
  ServiceName:
    Description: Name for the service
    Type: String
    AllowedPattern: "[-_ a-zA-Z0-9]*"
    ConstraintDescription:
      can contain only alphanumeric characters, spaces, dashes
      and underscores.
  Type:
    Description: Name for the service type mail/app/bastion/cicd
    Type: String
  Env:
    Description: Environment dev/stg/prd
    Type: String
  CodePipelineArtifactStoreBucket:
    Type: String
  CodeBuildImage:
    Type: String
    Default: "aws/codebuild/amazonlinux2-x86_64-standard:3.0"
    Description: Image used for CodeBuild project.
  AutoScalingGroupsDev:
    Type: String
  AutoScalingGroupsStg:
    Type: String
  ElbInfoListNameDev:
    Type: String
  TargetGroupInfoListNameDev:
    Type: String
  ElbInfoListNameStg:
    Type: String
  TargetGroupInfoListNameStg:
    Type: String

Resources:
  # CodeDeployApplication
  CodeDeployAplication:
    Type: AWS::CodeDeploy::Application
    Properties:
      ComputePlatform: Server

  # CodeBuildProject
  CodeBuildProject:
    Description: Creating AWS CodeBuild project
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ../Templates/codeBuild.yml
      Parameters:
        CodePipelineArtifactStoreBucket: !Ref CodePipelineArtifactStoreBucket
        ServiceName: !Ref ServiceName
        CodeBuildImage: !Ref CodeBuildImage
        Branch: !Ref Branch
        Type: !Ref Type
        Env: !Ref Env
        CodeBuildServiceRole: !GetAtt CodeBuildServiceRole.Arn

  # CodeDeployDeploymentGroup
  CodeDeployDeploymentGroupDev:
    Description: Creating AWS CodeDeploymentGroup
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - CodeDeployAplication
    Properties:
      TemplateURL: ../Templates/codeDeploy.yml
      Parameters:
        ServiceName: !Ref ServiceName
        Type: !Ref Type
        Env: !Ref Env
        AutoScalingGroups: !Ref AutoScalingGroupsDev
        CodeDeployStage: Develop
        CodeDeployAplication: !Ref CodeDeployAplication
        CodeDeployServiceRole: !GetAtt CodeDeployServiceRole.Arn
        ElbInfoListName: !Ref ElbInfoListNameDev
        TargetGroupInfoListName: !Ref TargetGroupInfoListNameDev

  # CodeDeployDeploymentGroup
  CodeDeployDeploymentGroupStage:
    Description: Creating AWS CodeDeploymentGroup
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - CodeDeployAplication
    Properties:
      TemplateURL: ../Templates/codeDeploy.yml
      Parameters:
        ServiceName: !Ref ServiceName
        Type: !Ref Type
        Env: !Ref Env
        AutoScalingGroups: !Ref AutoScalingGroupsStg
        CodeDeployStage: Staging
        CodeDeployAplication: !Ref CodeDeployAplication
        CodeDeployServiceRole: !GetAtt CodeDeployServiceRole.Arn
        ElbInfoListName: !Ref ElbInfoListNameStg
        TargetGroupInfoListName: !Ref TargetGroupInfoListNameStg

  # CodePipeLineProject
  CodePipelineProject:
    Description: Creating AWS CodePipeLine project
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - CodeBuildProject
      - CodeDeployDeploymentGroupDev
      - CodeDeployDeploymentGroupStage
    Properties:
      TemplateURL: ../Templates/codePipeline.yml
      Parameters:
        CodePipelineArtifactStoreBucket: !Ref CodePipelineArtifactStoreBucket
        ServiceName: !Ref ServiceName
        GitHubToken: !Ref GitHubToken
        GitHubOwner: !Ref GitHubOwner
        Repository: !Ref Repository
        Branch: !Ref Branch
        Type: !Ref Type
        Env: !Ref Env
        CodeDeployAplication: !Ref CodeDeployAplication
        CodePipelineServiceRole: !GetAtt CodePipelineServiceRole.Arn

  # CodePipelineに適用するIAMRole
  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ServiceName}-${Env}-${Type}-codePipeline-role
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodePipelinePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource:
                  - !Sub arn:aws:s3:::${CodePipelineArtifactStoreBucket}/*
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
              - Resource: "*"
                Effect: Allow
                Action:
                  - codecommit:GetRepository
                  - codecommit:ListBranches
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:UploadArchive
                  - codecommit:CancelUploadArchive
                  - codedeploy:CreateDeployment
                  - codedeploy:GetApplication
                  - codedeploy:GetApplicationRevision
                  - codedeploy:GetDeployment
                  - codedeploy:GetDeploymentConfig
                  - codedeploy:RegisterApplicationRevision
                  - codebuild:StartBuild
                  - codebuild:StopBuild
                  - codebuild:BatchGet*
                  - codebuild:Get*
                  - codebuild:List*
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - s3:*
                  - sns:Publish
                  - elasticloadbalancing:*
                  - autoscaling:*
                  - iam:PassRole
              - Resource: "*"
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents

  # CodeBuildに適用するIAMRole
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ServiceName}-${Env}-${Type}-codeBuild-role
      Path: /
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodeBuildAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Resource: "*"
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
              - Resource: !Sub arn:aws:s3:::${CodePipelineArtifactStoreBucket}/*
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetObjectVersion
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation

  # CodeDeployに適用するIAMRole
  CodeDeployServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ServiceName}-${Env}-${Type}-codeDeploy-role
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codedeploy.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole
      Policies:
        - PolicyName: CodeDeployAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: "*"
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
